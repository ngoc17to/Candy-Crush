(()=>{"use strict";var e={136:()=>{try{self["workbox:core:6.5.4"]&&_()}catch(e){}},447:()=>{try{self["workbox:precaching:6.5.4"]&&_()}catch(e){}},227:()=>{try{self["workbox:routing:6.5.4"]&&_()}catch(e){}},390:()=>{try{self["workbox:strategies:6.5.4"]&&_()}catch(e){}}},t={};function s(a){var n=t[a];if(void 0!==n)return n.exports;var r=t[a]={exports:{}};return e[a](r,r.exports,s),r.exports}(()=>{s(136);class e extends Error{constructor(e,t){super(((e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s})(e,t)),this.name=e,this.details=t}}const t={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:"undefined"!=typeof registration?registration.scope:""},a=e=>[t.prefix,e,t.suffix].filter((e=>e&&e.length>0)).join("-"),n=e=>e||a(t.precache);function r(e,t){const s=t();return e.waitUntil(s),s}function i(t){if(!t)throw new e("add-to-cache-list-unexpected-type",{entry:t});if("string"==typeof t){const e=new URL(t,location.href);return{cacheKey:e.href,url:e.href}}const{revision:s,url:a}=t;if(!a)throw new e("add-to-cache-list-unexpected-type",{entry:t});if(!s){const e=new URL(a,location.href);return{cacheKey:e.href,url:e.href}}const n=new URL(a,location.href),r=new URL(a,location.href);return n.searchParams.set("__WB_REVISION__",s),{cacheKey:n.href,url:r.href}}s(447);class c{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:s})=>{if("install"===e.type&&t&&t.originalRequest&&t.originalRequest instanceof Request){const e=t.originalRequest.url;s?this.notUpdatedURLs.push(e):this.updatedURLs.push(e)}return s}}}class o{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:e,params:t})=>{const s=(null==t?void 0:t.cacheKey)||this._precacheController.getCacheKeyForURL(e.url);return s?new Request(s,{headers:e.headers}):e},this._precacheController=e}}let h;function l(e,t){const s=new URL(e);for(const e of t)s.searchParams.delete(e);return s.href}class u{constructor(){this.promise=new Promise(((e,t)=>{this.resolve=e,this.reject=t}))}}const d=new Set;function f(e){return"string"==typeof e?new Request(e):e}s(390);class p{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new u,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const e of this._plugins)this._pluginStateMap.set(e,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(t){const{event:s}=this;let a=f(t);if("navigate"===a.mode&&s instanceof FetchEvent&&s.preloadResponse){const e=await s.preloadResponse;if(e)return e}const n=this.hasCallback("fetchDidFail")?a.clone():null;try{for(const e of this.iterateCallbacks("requestWillFetch"))a=await e({request:a.clone(),event:s})}catch(t){if(t instanceof Error)throw new e("plugin-error-request-will-fetch",{thrownErrorMessage:t.message})}const r=a.clone();try{let e;e=await fetch(a,"navigate"===a.mode?void 0:this._strategy.fetchOptions);for(const t of this.iterateCallbacks("fetchDidSucceed"))e=await t({event:s,request:r,response:e});return e}catch(e){throw n&&await this.runCallbacks("fetchDidFail",{error:e,event:s,originalRequest:n.clone(),request:r.clone()}),e}}async fetchAndCachePut(e){const t=await this.fetch(e),s=t.clone();return this.waitUntil(this.cachePut(e,s)),t}async cacheMatch(e){const t=f(e);let s;const{cacheName:a,matchOptions:n}=this._strategy,r=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},n),{cacheName:a});s=await caches.match(r,i);for(const e of this.iterateCallbacks("cachedResponseWillBeUsed"))s=await e({cacheName:a,matchOptions:n,cachedResponse:s,request:r,event:this.event})||void 0;return s}async cachePut(t,s){const a=f(t);await(0,new Promise((e=>setTimeout(e,0))));const n=await this.getCacheKey(a,"write");if(!s)throw new e("cache-put-with-no-response",{url:(r=n.url,new URL(String(r),location.href).href.replace(new RegExp(`^${location.origin}`),""))});var r;const i=await this._ensureResponseSafeToCache(s);if(!i)return!1;const{cacheName:c,matchOptions:o}=this._strategy,h=await self.caches.open(c),u=this.hasCallback("cacheDidUpdate"),p=u?await async function(e,t,s,a){const n=l(t.url,s);if(t.url===n)return e.match(t,a);const r=Object.assign(Object.assign({},a),{ignoreSearch:!0}),i=await e.keys(t,r);for(const t of i)if(n===l(t.url,s))return e.match(t,a)}(h,n.clone(),["__WB_REVISION__"],o):null;try{await h.put(n,u?i.clone():i)}catch(e){if(e instanceof Error)throw"QuotaExceededError"===e.name&&await async function(){for(const e of d)await e()}(),e}for(const e of this.iterateCallbacks("cacheDidUpdate"))await e({cacheName:c,oldResponse:p,newResponse:i.clone(),request:n,event:this.event});return!0}async getCacheKey(e,t){const s=`${e.url} | ${t}`;if(!this._cacheKeys[s]){let a=e;for(const e of this.iterateCallbacks("cacheKeyWillBeUsed"))a=f(await e({mode:t,request:a,event:this.event,params:this.params}));this._cacheKeys[s]=a}return this._cacheKeys[s]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const s of this.iterateCallbacks(e))await s(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if("function"==typeof t[e]){const s=this._pluginStateMap.get(t),a=a=>{const n=Object.assign(Object.assign({},a),{state:s});return t[e](n)};yield a}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,s=!1;for(const e of this.iterateCallbacks("cacheWillUpdate"))if(t=await e({request:this.request,response:t,event:this.event})||void 0,s=!0,!t)break;return s||t&&200!==t.status&&(t=void 0),t}}class g{constructor(e={}){this.cacheName=e.cacheName||a(t.runtime),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,s="string"==typeof e.request?new Request(e.request):e.request,a="params"in e?e.params:void 0,n=new p(this,{event:t,request:s,params:a}),r=this._getResponse(n,s,t);return[r,this._awaitComplete(r,n,s,t)]}async _getResponse(t,s,a){let n;await t.runCallbacks("handlerWillStart",{event:a,request:s});try{if(n=await this._handle(s,t),!n||"error"===n.type)throw new e("no-response",{url:s.url})}catch(e){if(e instanceof Error)for(const r of t.iterateCallbacks("handlerDidError"))if(n=await r({error:e,event:a,request:s}),n)break;if(!n)throw e}for(const e of t.iterateCallbacks("handlerWillRespond"))n=await e({event:a,request:s,response:n});return n}async _awaitComplete(e,t,s,a){let n,r;try{n=await e}catch(r){}try{await t.runCallbacks("handlerDidRespond",{event:a,request:s,response:n}),await t.doneWaiting()}catch(e){e instanceof Error&&(r=e)}if(await t.runCallbacks("handlerDidComplete",{event:a,request:s,response:n,error:r}),t.destroy(),r)throw r}}class y extends g{constructor(e={}){e.cacheName=n(e.cacheName),super(e),this._fallbackToNetwork=!1!==e.fallbackToNetwork,this.plugins.push(y.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){return await t.cacheMatch(e)||(t.event&&"install"===t.event.type?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(t,s){let a;const n=s.params||{};if(!this._fallbackToNetwork)throw new e("missing-precache-entry",{cacheName:this.cacheName,url:t.url});{const e=n.integrity,r=t.integrity,i=!r||r===e;a=await s.fetch(new Request(t,{integrity:"no-cors"!==t.mode?r||e:void 0})),e&&i&&"no-cors"!==t.mode&&(this._useDefaultCacheabilityPluginIfNeeded(),await s.cachePut(t,a.clone()))}return a}async _handleInstall(t,s){this._useDefaultCacheabilityPluginIfNeeded();const a=await s.fetch(t);if(!await s.cachePut(t,a.clone()))throw new e("bad-precaching-response",{url:t.url,status:a.status});return a}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[s,a]of this.plugins.entries())a!==y.copyRedirectedCacheableResponsesPlugin&&(a===y.defaultPrecacheCacheabilityPlugin&&(e=s),a.cacheWillUpdate&&t++);0===t?this.plugins.push(y.defaultPrecacheCacheabilityPlugin):t>1&&null!==e&&this.plugins.splice(e,1)}}y.defaultPrecacheCacheabilityPlugin={cacheWillUpdate:async({response:e})=>!e||e.status>=400?null:e},y.copyRedirectedCacheableResponsesPlugin={cacheWillUpdate:async({response:t})=>t.redirected?await async function(t,s){let a=null;if(t.url&&(a=new URL(t.url).origin),a!==self.location.origin)throw new e("cross-origin-copy-response",{origin:a});const n=t.clone(),r={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},i=s?s(r):r,c=function(){if(void 0===h){const e=new Response("");if("body"in e)try{new Response(e.body),h=!0}catch(e){h=!1}h=!1}return h}()?n.body:await n.blob();return new Response(c,i)}(t):t};class w{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:s=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new y({cacheName:n(e),plugins:[...t,new o({precacheController:this})],fallbackToNetwork:s}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(t){const s=[];for(const a of t){"string"==typeof a?s.push(a):a&&void 0===a.revision&&s.push(a.url);const{cacheKey:t,url:n}=i(a),r="string"!=typeof a&&a.revision?"reload":"default";if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==t)throw new e("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:t});if("string"!=typeof a&&a.integrity){if(this._cacheKeysToIntegrities.has(t)&&this._cacheKeysToIntegrities.get(t)!==a.integrity)throw new e("add-to-cache-list-conflicting-integrities",{url:n});this._cacheKeysToIntegrities.set(t,a.integrity)}if(this._urlsToCacheKeys.set(n,t),this._urlsToCacheModes.set(n,r),s.length>0){const e=`Workbox is precaching URLs without revision info: ${s.join(", ")}\nThis is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(e)}}}install(e){return r(e,(async()=>{const t=new c;this.strategy.plugins.push(t);for(const[t,s]of this._urlsToCacheKeys){const a=this._cacheKeysToIntegrities.get(s),n=this._urlsToCacheModes.get(t),r=new Request(t,{integrity:a,cache:n,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:s},request:r,event:e}))}const{updatedURLs:s,notUpdatedURLs:a}=t;return{updatedURLs:s,notUpdatedURLs:a}}))}activate(e){return r(e,(async()=>{const e=await self.caches.open(this.strategy.cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),a=[];for(const n of t)s.has(n.url)||(await e.delete(n),a.push(n.url));return{deletedURLs:a}}))}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,s=this.getCacheKeyForURL(t);if(s)return(await self.caches.open(this.strategy.cacheName)).match(s)}createHandlerBoundToURL(t){const s=this.getCacheKeyForURL(t);if(!s)throw new e("non-precached-url",{url:t});return e=>(e.request=new Request(t),e.params=Object.assign({cacheKey:s},e.params),this.strategy.handle(e))}}let m;const _=()=>(m||(m=new w),m);s(227);const R=e=>e&&"object"==typeof e?e:{handle:e};class v{constructor(e,t,s="GET"){this.handler=R(t),this.match=e,this.method=s}setCatchHandler(e){this.catchHandler=R(e)}}class C extends v{constructor(e,t,s){super((({url:t})=>{const s=e.exec(t.href);if(s&&(t.origin===location.origin||0===s.index))return s.slice(1)}),t,s)}}class b{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",(e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)}))}addCacheListener(){self.addEventListener("message",(e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map((t=>{"string"==typeof t&&(t=[t]);const s=new Request(...t);return this.handleRequest({request:s,event:e})})));e.waitUntil(s),e.ports&&e.ports[0]&&s.then((()=>e.ports[0].postMessage(!0)))}}))}handleRequest({request:e,event:t}){const s=new URL(e.url,location.href);if(!s.protocol.startsWith("http"))return;const a=s.origin===location.origin,{params:n,route:r}=this.findMatchingRoute({event:t,request:e,sameOrigin:a,url:s});let i=r&&r.handler;const c=e.method;if(!i&&this._defaultHandlerMap.has(c)&&(i=this._defaultHandlerMap.get(c)),!i)return;let o;try{o=i.handle({url:s,request:e,event:t,params:n})}catch(e){o=Promise.reject(e)}const h=r&&r.catchHandler;return o instanceof Promise&&(this._catchHandler||h)&&(o=o.catch((async a=>{if(h)try{return await h.handle({url:s,request:e,event:t,params:n})}catch(e){e instanceof Error&&(a=e)}if(this._catchHandler)return this._catchHandler.handle({url:s,request:e,event:t});throw a}))),o}findMatchingRoute({url:e,sameOrigin:t,request:s,event:a}){const n=this._routes.get(s.method)||[];for(const r of n){let n;const i=r.match({url:e,sameOrigin:t,request:s,event:a});if(i)return n=i,(Array.isArray(n)&&0===n.length||i.constructor===Object&&0===Object.keys(i).length||"boolean"==typeof i)&&(n=void 0),{route:r,params:n}}return{}}setDefaultHandler(e,t="GET"){this._defaultHandlerMap.set(t,R(e))}setCatchHandler(e){this._catchHandler=R(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(t){if(!this._routes.has(t.method))throw new e("unregister-route-but-not-found-with-method",{method:t.method});const s=this._routes.get(t.method).indexOf(t);if(!(s>-1))throw new e("unregister-route-route-not-registered");this._routes.get(t.method).splice(s,1)}}let q;class U extends v{constructor(e,t){super((({request:s})=>{const a=e.getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t=[/^utm_/,/^fbclid$/],directoryIndex:s="index.html",cleanURLs:a=!0,urlManipulation:n}={}){const r=new URL(e,location.href);r.hash="",yield r.href;const i=function(e,t=[]){for(const s of[...e.searchParams.keys()])t.some((e=>e.test(s)))&&e.searchParams.delete(s);return e}(r,t);if(yield i.href,s&&i.pathname.endsWith("/")){const e=new URL(i.href);e.pathname+=s,yield e.href}if(a){const e=new URL(i.href);e.pathname+=".html",yield e.href}if(n){const e=n({url:r});for(const t of e)yield t.href}}(s.url,t)){const t=a.get(n);if(t)return{cacheKey:t,integrity:e.getIntegrityForCacheKey(t)}}}),e.strategy)}}var L;L=[{'revision':'2ced086a74ed951faa8e6be4c65c7e16','url':'assets/explodePack.json'},{'revision':'6d1196519b07f70f2e3b3a32c26a3766','url':'assets/images/BackgroundWithThrone.jpg'},{'revision':'e65909793190522a7fb2f4f7f183d934','url':'assets/images/Boosters/ArrowSprite.png'},{'revision':'aa7dc11fbe213f649c9a8405aae74769','url':'assets/images/Boosters/BowWithArrowSprite.png'},{'revision':'e006cdbb98858f60d10a845e1b16730a','url':'assets/images/Boosters/Cannon In Game.png'},{'revision':'8f77e14b301a9feeb522cfc49e851715','url':'assets/images/Boosters/Cannon UI.png'},{'revision':'4bade2de8e7dea7724c020e565ea7295','url':'assets/images/Boosters/CannonBall.png'},{'revision':'d20da42b4485123dce934071358c4efb','url':'assets/images/Boosters/HorizontalRocket.png'},{'revision':'79cbb7f5c24d84450c9cc281d7550333','url':'assets/images/Boosters/Jester Hat.png'},{'revision':'c5fd4b940da62d5afa75283e32ea60d2','url':'assets/images/Boosters/Light Ball.png'},{'revision':'d80cc4920a28e90232329bdbd3c90768','url':'assets/images/Boosters/Missile.png'},{'revision':'99e543511f653eb4da09a8553cdc8236','url':'assets/images/Boosters/MissileShadow.png'},{'revision':'d38704ccdf6a36b96e80003753b53cd7','url':'assets/images/Boosters/Royal_Hammer.png'},{'revision':'bcdca81eb4871e10bb41824271b9af2e','url':'assets/images/Boosters/SingleRocket.png'},{'revision':'54bba21baf03a9c7b3fc3c08e38db103','url':'assets/images/Boosters/TNT.png'},{'revision':'137dc8dab0dc31bc1dc16f1adb4d6bc4','url':'assets/images/Boosters/VerticalRocket.png'},{'revision':'e006cdbb98858f60d10a845e1b16730a','url':'assets/images/Cannon In Game.png'},{'revision':'8f77e14b301a9feeb522cfc49e851715','url':'assets/images/Cannon UI.png'},{'revision':'ca5b71cd1fc7d1acc9075cbb695790bc','url':'assets/images/CircleWithOutwardsLines.png'},{'revision':'63bf7ee98fdd0af6dba2bad4c7914088','url':'assets/images/Level1-Board.png'},{'revision':'d9dcf36a9342ae6b9ada801e698c305a','url':'assets/images/Level2Board.png'},{'revision':'cddac85ab5530048850ada85ee2f7422','url':'assets/images/Level3Board.png'},{'revision':'bf799c66e14686f4cc168bd3f65cb2a1','url':'assets/images/Level4Board.png'},{'revision':'f5adebc3bde5a33570de47a7f9c880a1','url':'assets/images/Match_Items/BlueMatchItem.png'},{'revision':'2715eae6d723065d895f14453f0b8c06','url':'assets/images/Match_Items/GreenMatchItem.png'},{'revision':'00762aa5c22400fa14ecf9de012a9ecc','url':'assets/images/Match_Items/PurpleMatchItem.png'},{'revision':'b0d7d50e824360ff3a69de842d7ed1f7','url':'assets/images/Match_Items/RedMatchItem.png'},{'revision':'4a0343bc6a6d0c57736f30095edb26c9','url':'assets/images/Match_Items/YellowMatchItem.png'},{'revision':'c0224c621bbee797b9c90da5c5ebffe3','url':'assets/images/Particle Effect Textures/CircleWave.png'},{'revision':'ca5b71cd1fc7d1acc9075cbb695790bc','url':'assets/images/Particle Effect Textures/CircleWithOutwardsLines.png'},{'revision':'d1e888340a0dfb485d6f9e1732b5cb51','url':'assets/images/Particle Effect Textures/Flame_Mask.png'},{'revision':'236ae1d620b0fc8bb3e2a3a8798d79ef','url':'assets/images/Particle Effect Textures/Flame_Texture.png'},{'revision':'6d96f90d838c3b548a1d580791a4229b','url':'assets/images/Particle Effect Textures/GlowSpikeTexture.png'},{'revision':'6fa2c51dba2d3c1fe917554561ffbf65','url':'assets/images/Particle Effect Textures/LaserTexture.png'},{'revision':'540dfb065a1d5efc0bf7c9668aaecc8a','url':'assets/images/Particle Effect Textures/LineWithBluredEdges.png'},{'revision':'9d74790e8cd4a96dbf4195b3d0942344','url':'assets/images/Particle Effect Textures/LineWithBluredEdges2.png'},{'revision':'04cf5b576af2a11cc26cdcc52825164a','url':'assets/images/Particle Effect Textures/NoiseTexture.png'},{'revision':'520c1b8e1d306ce9f44cd2c6719fe710','url':'assets/images/Particle Effect Textures/Range.png'},{'revision':'7fee51024274d38849a49731b80e6b3b','url':'assets/images/Particle Effect Textures/SharpStarTexture.png'},{'revision':'5f8c18052415d14ba0ce193e61a30985','url':'assets/images/Particle Effect Textures/SquareTexture.png'},{'revision':'941a402d680bec44bb527b4215bfd3de','url':'assets/images/Particle Effect Textures/StarTexture.png'},{'revision':'5656a8e2fe2ea232eebacdff9b3e4769','url':'assets/images/Particle Effect Textures/WhiteCircle.png'},{'revision':'37468b2943e57af50d94749d85cc734c','url':'assets/images/Particle Effect Textures/smoke.png'},{'revision':'e119b77e33aa099e85a262cd62fdf854','url':'assets/images/Shattered Block Parts/GrassParticle.png'},{'revision':'d0aadd8595d44ace75061ceea4628a2b','url':'assets/images/Shattered Block Parts/block_blue_part_01.png'},{'revision':'500023787f89d6922707602b2bedde9b','url':'assets/images/Shattered Block Parts/block_blue_part_02.png'},{'revision':'c5c08bbfca5b5750d91fd92493bb813f','url':'assets/images/Shattered Block Parts/block_blue_part_03.png'},{'revision':'f2fe22851362ccd42c686622cb3bd842','url':'assets/images/Shattered Block Parts/block_blue_part_04.png'},{'revision':'1fdd94f9ab488a939ad5fa5f3d74fc63','url':'assets/images/Shattered Block Parts/block_green_part_01.png'},{'revision':'351fad11b69bebcd6663f68fc0355dea','url':'assets/images/Shattered Block Parts/block_green_part_02.png'},{'revision':'a4ed6f67dfe1f81cf0dcedc241680c9e','url':'assets/images/Shattered Block Parts/block_green_part_03.png'},{'revision':'866ef2d5dda15d1e0db53e729da819f0','url':'assets/images/Shattered Block Parts/block_green_part_04.png'},{'revision':'4c1244e79e7fd13cec0d4825275f4242','url':'assets/images/Shattered Block Parts/block_purple_particle.png'},{'revision':'21f1184f9299cc47a1fb6c46fb6c063d','url':'assets/images/Shattered Block Parts/block_red_part_01.png'},{'revision':'126eebaf98580c8263045fd0bbc616a3','url':'assets/images/Shattered Block Parts/block_red_part_02.png'},{'revision':'b62fba3f6783664b8f56d37edb7a0602','url':'assets/images/Shattered Block Parts/block_red_part_03.png'},{'revision':'4c378903df196c7de4dcdbef6b8720e1','url':'assets/images/Shattered Block Parts/block_red_part_04.png'},{'revision':'74f697da2ac6f00ac9ad4d78d2a7917c','url':'assets/images/Shattered Block Parts/block_yellow_particle.png'},{'revision':'9d6ac9347cd8b9f633608ae449ca7780','url':'assets/images/confetti.png'},{'revision':'b887c333d5ec8274b78d0851e7b3337b','url':'assets/images/phaser-logo.png'},{'revision':'c192d7dc8c4a8c90c629cdc18318e09e','url':'assets/images/tileOutline.png'},{'revision':'3a5f580ea2a61fb3ce7d3a6d4df1f568','url':'assets/images/ui/b_1.png'},{'revision':'0dfe587931815f67623e081ab86c5d66','url':'assets/images/ui/b_2.png'},{'revision':'889ed707d06aba19bd49aaca79bd995e','url':'assets/images/ui/b_3.png'},{'revision':'aed42f3547c565cd246c4e6958bf1245','url':'assets/images/ui/b_4.png'},{'revision':'719295c41e8b0d420092a0f1ea419e94','url':'assets/images/ui/b_5.png'},{'revision':'94f6afdce5f0cae6c82facb4476014a1','url':'assets/images/ui/b_6.png'},{'revision':'94098d9725e30bf382f93e3222ec2379','url':'assets/images/ui/b_7.png'},{'revision':'d2e25aedde16614b554e1ba47dba8e8d','url':'assets/images/ui/b_8.png'},{'revision':'6521905e0c715ff7af2b33235241edb7','url':'assets/images/ui/bar_1.png'},{'revision':'f687c771c6f116d5241fbae7758c1027','url':'assets/images/ui/bar_2.png'},{'revision':'9c289ef38e20d69401914dbfc9fe3a53','url':'assets/images/ui/c.png'},{'revision':'2f7350851ce8a195593cded099e28361','url':'assets/images/ui/cga_ui_gold.ai'},{'revision':'88cc6f0fe669a350bcc2e305369b8bb3','url':'assets/images/ui/f.png'},{'revision':'54e22457f0c82a950e924825a0d09e53','url':'assets/images/ui/field.png'},{'revision':'aada60486c99717d227ebffc9eb7f7a8','url':'assets/images/ui/l1.png'},{'revision':'cc6553f8a83257fcdd223b0c93661eb7','url':'assets/images/ui/l2.png'},{'revision':'331b82f89aff541173dac949b2eb227b','url':'assets/images/ui/pr_ui_gold.png'},{'revision':'dd7f26fe267c0698195c3fa47aefea05','url':'assets/images/ui/s1.png'},{'revision':'82ec4ceb75cc8ab77d479ad30ff256b4','url':'assets/images/ui/s2.png'},{'revision':'0f335241ab94f6115a8ae47aa53d70be','url':'assets/pack.json'},{'revision':'57040e5677322118f6d56a1d9e43c5c6','url':'favicon.ico'},{'revision':'2ffbc23293ee8a797bc61e9c02534206','url':'icons/icons-192.png'},{'revision':'8bdcc486cda9b423f50e886f2ddb6604','url':'icons/icons-512.png'},{'revision':'2d61055ce6abdbd92f6feddee0924864','url':'index.html'},{'revision':null,'url':'main.1de449013da2f1ef6279.bundle.js'},{'revision':'4b7794a9c6ccfc90c36c434a89288a64','url':'manifest.json'},{'revision':null,'url':'vendors.d52ccc982dede3cd8989.bundle.js'},{'revision':'bd5b234274f46d53c26c6a2587d17163','url':'vendors.d52ccc982dede3cd8989.bundle.js.LICENSE.txt'}],_().precache(L),function(t){const s=_();!function(t,s,a){let n;if("string"==typeof t){const e=new URL(t,location.href);n=new v((({url:t})=>t.href===e.href),s,a)}else if(t instanceof RegExp)n=new C(t,s,a);else if("function"==typeof t)n=new v(t,s,a);else{if(!(t instanceof v))throw new e("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});n=t}(q||(q=new b,q.addFetchListener(),q.addCacheListener()),q).registerRoute(n)}(new U(s,t))}(undefined)})()})();