(()=>{"use strict";var e,t={485:(e,t,i)=>{i(440);class s extends Phaser.Scene{constructor(){super({key:"BootScene"})}preload(){this.cameras.main.setBackgroundColor(10016391),this.createLoadingbar(),this.load.on("progress",(e=>{this.progressBar.clear(),this.progressBar.fillStyle(16774867,1),this.progressBar.fillRect(this.cameras.main.width/4,this.cameras.main.height/2-16,this.cameras.main.width/2*e,16)})),this.load.on("complete",(()=>{this.progressBar.destroy(),this.loadingBar.destroy()})),this.load.pack("preload","./assets/pack.json","preload"),this.load.pack("explodeParticle","./assets/explodePack.json","explodeParticle"),this.load.image("background","./assets/images/BackgroundWithThrone.jpg"),this.load.image("board","./assets/images/Level1-Board.png"),this.load.image("particle","./assets/images/CircleWithOutwardsLines.png"),this.load.image("horizontalRocket","./assets/images/Boosters/HorizontalRocket.png"),this.load.image("verticalRocket","./assets/images/Boosters/VerticalRocket.png"),this.load.image("lightBall","./assets/images/Boosters/Light Ball.png")}update(){this.scene.start("GameScene")}createLoadingbar(){this.loadingBar=this.add.graphics(),this.loadingBar.fillStyle(6139463,1),this.loadingBar.fillRect(this.cameras.main.width/4-2,this.cameras.main.height/2-18,this.cameras.main.width/2+4,20),this.progressBar=this.add.graphics()}}let l={score:0,highscore:0,boardTileSize:0,gridWidth:8,gridHeight:10,tileWidth:48,tileHeight:48,swapSpeed:200,destroySpeed:100,fallSpeed:200,TRANSITION_DELAY:5e3,candyTypes:["blueItem","greenItem","redItem","purpleItem","yellowItem"],GRID_OFFSET_X:0,GRID_OFFSET_Y:0};const r={blueItem:"blueExplode",greenItem:"greenExplode",redItem:"redExplode",purpleItem:"purpleExplode",yellowItem:"yellowExplode"},h=class{constructor(e){this.scene=e}createExplosionParticles(e,t,i){const s=r[i];this.scene.add.particles(e,t,s,{angle:{min:0,max:360},lifespan:1e3,speed:150,gravityY:800,scale:{start:.05,end:0,ease:"Sine.easeInOut"}}).explode(7)}};class o extends Phaser.GameObjects.Sprite{constructor(e,t,i,s){super(e,t,i,s),this.explodeEmitter=new h(e),this.currentScene=e,this.setOrigin(0,0),this.setInteractive(),this.setSize(l.tileWidth,l.tileHeight),this.setScale(.7),this.scene.add.existing(this)}destroyTile(){console.log("destroyTile"),this.destroyTween(),this.destroy()}destroyTween(){const e=this.scene,{x:t,y:i}=e.getTilePos(e.tileGrid,this);e.add.particles(0,0,"particle",{x:e.tileGrid[i][t].x+l.tileWidth/2,y:e.tileGrid[i][t].y+l.tileHeight/2,angle:{min:0,max:360},lifespan:250,speed:100,quantity:10,gravityY:150,scale:{start:.15,end:.02,ease:"Sine.easeInOut"},duration:10}),this.explodeEmitter.createExplosionParticles(e.tileGrid[i][t].x+l.tileWidth/2,e.tileGrid[i][t].y+l.tileHeight/2,e.tileGrid[i][t].texture.key)}}const n=o,a=class extends n{constructor(e,t,i){super(e,t,i,"lightBall")}},d=class{constructor(e,t){this.scene=e,this.scoreManager=t,this.createMilestoneBar()}createMilestoneBar(){const e=this.scene.cameras.main.height,t=this.scene.cameras.main.width;this.progressBox=this.scene.add.graphics(),this.progressBox.fillStyle(2236962,.8),this.progressBox.fillRect((t-320)/2,e/4-100,320,50),this.progressBar=this.scene.add.graphics()}updateMilestoneBar(){const e=this.scene.cameras.main.height,t=this.scene.cameras.main.width;this.progressBar.clear(),this.progressBar.fillStyle(16777215,1);const i=this.scoreManager.getScore()/this.scoreManager.getMilestone()*100;this.progressBar.fillRect((t-300)/2,e/4-90,i/100*300,30)}};class c extends n{constructor(e,t,i,s){super(e,t,i,"HORIZONTAL"===s?"horizontalRocket":"verticalRocket"),this.firstTweens=[],this.secondTweens=[],this.direction=s}destroyTile(){console.log("rocket tile"),this.destroyRocket()}addDestroyTweens(e,t,i,s,l){var r,h;if(this.isPosValid(i,s)){console.log(i,s);const o=e.tileGrid[i][s];o&&t.push({targets:e.tileGrid[i][s],x:null===(r=e.tileGrid[i][s])||void 0===r?void 0:r.x,y:null===(h=e.tileGrid[i][s])||void 0===h?void 0:h.y,duration:100,onComplete:()=>{o instanceof a?l.value--:o instanceof c&&o.direction===this.direction?(l.value--,o.destroy(),e.tileGrid[i][s]=void 0):(o instanceof n&&l.value--,null==o||o.destroyTile(),e.tileGrid[i][s]=void 0),0===l.value&&e.stateMachine.transition("fill")}})}}destroyRocket(){var e;const t=this.currentScene,{x:i,y:s}=t.getTilePos(t.tileGrid,this),r=i,h=s;if("HORIZONTAL"===this.direction){const e={value:l.gridWidth-1};for(let i=1;i<l.gridWidth;i++)this.addDestroyTweens(t,this.secondTweens,h,r+i,e),this.addDestroyTweens(t,this.firstTweens,h,r-i,e)}else if("VERTICAL"===this.direction){const e={value:l.gridHeight-1};for(let i=1;i<l.gridHeight;i++)this.addDestroyTweens(t,this.secondTweens,h+i,r,e),this.addDestroyTweens(t,this.firstTweens,h-i,r,e)}t.tweens.chain({tweens:this.firstTweens,loop:!1}),t.tweens.chain({tweens:this.secondTweens,loop:!1}),null===(e=t.tileGrid[s][i])||void 0===e||e.destroy()}isPosValid(e,t){return!(e<0||e>=l.gridHeight||t<0||t>=l.gridWidth)}}const g=c,p=class{constructor(e,t){this.scene=e,this.score=0,this.milestone=t}addScore(e){console.log("addScore"),this.score+=e,this.checkMilestone()}checkMilestone(){this.score>=this.milestone&&(this.score=this.score%this.milestone,this.scene.events.emit("milestoneReached"))}getScore(){return this.score}getMilestone(){return this.milestone}},u=class{},f=class extends u{constructor(e){super(),this.elapsedTime=0,this.scene=e,this.elapsedTime=0}enter(){console.log("DestroyState"),this.scene.destroyTiles()}exit(){}execute(e,t){}};const T=class extends u{constructor(e){super(),this.elapsedTime=0,this.scene=e,this.elapsedTime=0}enter(){return e=this,t=void 0,s=function*(){console.log("FillState"),yield Promise.all([this.scene.makeTilesFall(),this.scene.replenishField()])},new((i=void 0)||(i=Promise))((function(l,r){function h(e){try{n(s.next(e))}catch(e){r(e)}}function o(e){try{n(s.throw(e))}catch(e){r(e)}}function n(e){var t;e.done?l(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(h,o)}n((s=s.apply(e,t||[])).next())}));var e,t,i,s}exit(){}execute(e,t){}},y=class extends u{constructor(e){super(),this.scene=e,this.idleTween=[]}enter(){for(let e=0;e<l.gridHeight;e++)for(let t=0;t<l.gridWidth;t++)this.idleTween.push(this.scene.tweens.add({x:this.scene.tileGrid[e][t].x+l.gridWidth/2,y:this.scene.tileGrid[e][t].y+l.gridHeight/2,targets:this.scene.tileGrid[e][t],scale:.6,ease:"sine.inout",duration:300,delay:50*e,repeat:-1,yoyo:!0,repeatDelay:5e3}));this.scene.input.on("gameobjectdown",this.onGameObjectDown,this)}exit(){var e;this.idleTween.forEach((e=>{e.destroy()}));for(let t=0;t<l.gridHeight;t++)for(let i=0;i<l.gridWidth;i++)null===(e=this.scene.tileGrid[t][i])||void 0===e||e.setScale(.7);this.scene.input.off("gameobjectdown",this.onGameObjectDown,this)}onGameObjectDown(){console.log("IdleState -> PlayState"),this.stateMachine.transition("play")}execute(e,t){}},m=class extends u{constructor(e){super(),this.elapsedTime=0,this.scene=e,this.elapsedTime=0}enter(){console.log("PlayState"),this.elapsedTime=0}exit(){this.elapsedTime=0}execute(e,t){this.elapsedTime>=l.TRANSITION_DELAY||(this.elapsedTime+=t)}},w=class extends u{constructor(e){super(),this.scene=e,this.tiles=e.tiles}enter(){console.log("ShuffleState")}placeTilesInCircle(){const e=new Phaser.Geom.Circle(this.scene.cameras.main.width/2,this.scene.cameras.main.height/2,100);Phaser.Actions.PlaceOnCircle(this.tiles.getChildren(),e),this.scene.tweens.add({targets:e,radius:100,ease:"Quintic.easeInOut",duration:1500,yoyo:!1,repeat:0,onUpdate:()=>{Phaser.Actions.RotateAroundDistance(this.tiles.getChildren(),e,.02,e.radius)},onComplete:()=>{this.moveTilesToOriginalPositions()}})}moveTilesToOriginalPositions(){this.tiles.getChildren().forEach(((e,t)=>{const i=e;this.scene.tweens.add({targets:i,x:null==i?void 0:i.x,y:null==i?void 0:i.y,duration:500,delay:50*t,ease:"Power2",onComplete:()=>{i===this.tiles.getChildren()[this.tiles.getChildren().length-1]&&this.scene.stateMachine.transition("play")}})}))}exit(){}execute(e,t){}},S=class{constructor(e,t={},i=[]){this.initialState=e,this.possibleStates=t,this.stateArgs=i,this.state=null;for(const e of Object.values(this.possibleStates))e.stateMachine=this}update(e,t){null===this.state&&(this.state=this.initialState,this.possibleStates[this.state].enter()),this.possibleStates[this.state].execute(e,t)}transition(e,...t){this.state&&this.possibleStates[this.state].exit(),this.state=e,this.possibleStates[this.state].enter()}getState(){return this.state}},v=class extends u{constructor(e){super(),this.elapsedTime=0,this.scene=e}enter(e,t,i){console.log("SwapState"),this.scene.swapTiles(e,t,i)}exit(){}execute(e,t){}};var x=function(e,t,i,s){return new(i||(i=Promise))((function(l,r){function h(e){try{n(s.next(e))}catch(e){r(e)}}function o(e){try{n(s.throw(e))}catch(e){r(e)}}function n(e){var t;e.done?l(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(h,o)}n((s=s.apply(e,t||[])).next())}))};class G extends Phaser.Scene{constructor(){super({key:"GameScene"})}create(){const e=this.cameras.main.height,t=this.cameras.main.width,i=this.add.image(0,0,"background"),s=e/i.height;i.setScale(.5,s),i.setPosition(t/2,e/2);const r=this.add.image(0,0,"board");r.setScale(.75),r.setPosition(t/2,3*e/5),this.canPick=!0,this.dragging=!1,this.firstSelectedTile=void 0,this.secondSelectedTile=void 0,this.scoreManager=new p(this,1e3),this.milestoneBar=new d(this,this.scoreManager),this.tiles=this.add.group(),function(e,t){const i=window.innerWidth/2-199.5,s=3*window.innerHeight/5-247.5,r=l.gridWidth*l.tileWidth,h=l.gridHeight*l.tileHeight;l.GRID_OFFSET_X=i+(399-r)/2+2,l.GRID_OFFSET_Y=s+(495-h)/2+2,l.boardTileSize=384/l.gridWidth}(),this.drawField(),this.stateMachine=new S("play",{play:new m(this),idle:new y(this),shuffle:new w(this),swap:new v(this),fill:new T(this),destroy:new f(this)}),this.input.on("gameobjectdown",this.tileSelect,this),this.input.on("gameobjectmove",this.startSwipe,this),this.input.on("pointerup",this.stopSwipe,this)}update(e,t){this.stateMachine.update(e,t),this.milestoneBar.updateMilestoneBar()}handleMilestoneReached(){var e;let t=[];for(let e=0;e<l.gridHeight;e++)for(let i=0;i<l.gridWidth;i++)this.tileGrid[e][i]&&t.push(this.tileGrid[e][i]);Phaser.Utils.Array.Shuffle(t);for(let i=0;i<l.gridHeight;i++)for(let s=0;s<l.gridWidth;s++)if(t.length>0){this.tileGrid[i][s]=t.pop();let r=s*l.tileWidth+l.GRID_OFFSET_X,h=i*l.tileHeight+l.GRID_OFFSET_Y;null===(e=this.tileGrid[i][s])||void 0===e||e.setPosition(r,h)}this.stateMachine.transition("shuffle")}drawField(){this.tileGrid=[];for(let e=0;e<l.gridHeight;e++){this.tileGrid[e]=[];for(let t=0;t<l.gridWidth;t++){let i,s=t*l.tileWidth+l.GRID_OFFSET_X,r=e*l.tileHeight+l.GRID_OFFSET_Y;do{this.tiles.getLength()>0&&this.tileGrid[e][t]&&this.tileGrid[e][t].destroy();let h=l.candyTypes[Phaser.Math.RND.between(0,l.candyTypes.length-1)];i=new n(this,s,r,h),this.tileGrid[e][t]=i,this.tiles.add(i)}while(this.isMatch(e,t))}}}isMatch(e,t){return this.isHorizontalMatch(e,t)||this.isVerticalMatch(e,t)}isHorizontalMatch(e,t){var i,s,l,r;return(null===(i=this.tileAt(e,t))||void 0===i?void 0:i.texture.key)==(null===(s=this.tileAt(e,t-1))||void 0===s?void 0:s.texture.key)&&(null===(l=this.tileAt(e,t))||void 0===l?void 0:l.texture.key)==(null===(r=this.tileAt(e,t-2))||void 0===r?void 0:r.texture.key)}isVerticalMatch(e,t){var i,s,l,r;return(null===(i=this.tileAt(e,t))||void 0===i?void 0:i.texture.key)==(null===(s=this.tileAt(e-1,t))||void 0===s?void 0:s.texture.key)&&(null===(l=this.tileAt(e,t))||void 0===l?void 0:l.texture.key)==(null===(r=this.tileAt(e-2,t))||void 0===r?void 0:r.texture.key)}tileAt(e,t){if(!(e<0||e>=l.gridHeight||t<0||t>=l.gridWidth))return this.tileGrid[e][t]}tileSelect(e,t,i){if(this.canPick){this.dragging=!0;let e=t;e&&(this.selectionTween&&this.selectionTween.destroy(),this.selectionTween=this.tweens.add({targets:e,scale:.75,duration:300,yoyo:!0,repeat:-1}),this.firstSelectedTile?this.areTheSame(e,this.firstSelectedTile)?(this.selectionTween&&this.selectionTween.destroy(),this.firstSelectedTile.setScale(.7),this.firstSelectedTile=void 0):this.areNext(e,this.firstSelectedTile)?(this.firstSelectedTile.setScale(.7),this.secondSelectedTile=e,this.swapTiles(this.firstSelectedTile,this.secondSelectedTile,!0)):(this.firstSelectedTile.setScale(.7),this.firstSelectedTile=e):(e.setDepth(1),this.firstSelectedTile=e))}}startSwipe(e,t,i){if(this.dragging&&null!=this.firstSelectedTile){let t=e.downX-e.x,i=e.downY-e.y,s=0,r=0;if(t>l.tileWidth/2&&Math.abs(i)<l.tileHeight/4&&(r=-1),t<-l.tileWidth/2&&Math.abs(i)<l.tileHeight/4&&(r=1),i>l.tileWidth/2&&Math.abs(t)<l.tileHeight/4&&(s=-1),i<-l.tileWidth/2&&Math.abs(t)<l.tileHeight/4&&(s=1),s+r!=0){const e=this.getTilePos(this.tileGrid,this.firstSelectedTile);this.secondSelectedTile=this.tileAt(e.y+s,e.x+r),this.secondSelectedTile&&(this.swapTiles(this.firstSelectedTile,this.secondSelectedTile,!0),this.dragging=!1)}this.firstSelectedTile.setScale(.7)}}stopSwipe(){this.dragging=!1}areTheSame(e,t){const i=this.getTilePos(this.tileGrid,e),s=this.getTilePos(this.tileGrid,t);return i.x==s.x&&i.y==s.y}areNext(e,t){const i=this.getTilePos(this.tileGrid,e),s=this.getTilePos(this.tileGrid,t);return Math.abs(i.x-s.x)+Math.abs(i.y-s.y)==1}getTilePos(e,t){let i={x:-1,y:-1};for(let s=0;s<e.length;s++)for(let l=0;l<e[s].length;l++)if(t===e[s][l]){i.x=l,i.y=s;break}return i}swapTiles(e,t,i){this.swappingTiles=2,this.canPick=!1;const s=this.getTilePos(this.tileGrid,e),l=this.getTilePos(this.tileGrid,t);this.tileGrid[s.y][s.x]=t,this.tileGrid[l.y][l.x]=e,this.tweenTile(e,t,i),this.tweenTile(t,e,i),this.selectionTween&&this.selectionTween.destroy()}tweenTile(e,t,i){const s=this.getTilePos(this.tileGrid,e);this.tweens.add({targets:this.tileGrid[s.y][s.x],x:null==t?void 0:t.x,y:null==t?void 0:t.y,duration:l.swapSpeed,callbackScope:this,onComplete:()=>{this.swappingTiles--,0==this.swappingTiles&&(!this.matchInBoard()&&i?this.swapTiles(e,t,!1):this.matchInBoard()?this.handleMatches():(this.canPick=!0,this.firstSelectedTile=void 0,this.secondSelectedTile=void 0))}})}matchInBoard(){if(this.firstSelectedTile instanceof g||this.secondSelectedTile instanceof g)return!0;for(let e=0;e<l.gridHeight;e++)for(let t=0;t<l.gridWidth;t++)if(this.isMatch(e,t))return!0;return!1}handleMatches(){this.removeMap=[];for(let e=0;e<l.gridHeight;e++){this.removeMap[e]=[];for(let t=0;t<l.gridWidth;t++)this.removeMap[e].push(0)}if(console.log("handleMatches"),this.firstSelectedTile instanceof g||this.secondSelectedTile instanceof g){if(console.log("destroyttttttttt"),this.firstSelectedTile instanceof g){const e=this.getTilePos(this.tileGrid,this.firstSelectedTile);this.removeMap[e.y][e.x]++}if(this.secondSelectedTile instanceof g){const e=this.getTilePos(this.tileGrid,this.secondSelectedTile);this.removeMap[e.y][e.x]++}}else this.markMatches("HORIZONTAL"),this.markMatches("VERTICAL");this.stateMachine.transition("destroy")}markMatches(e){if("HORIZONTAL"===e)for(let t=0;t<l.gridHeight;t++){let i=1,s="",r=0,h="blueItem";for(let o=0;o<l.gridWidth;o++)this.tileGrid[t][o]instanceof g||this.tileGrid[t][o]instanceof a||(h=this.tileGrid[t][o].texture.key,h==s&&i++,h==s&&o!=l.gridWidth-1||(i>=3&&this.handleMatchStreak(r,o,t,i,e),r=o,i=1,s=h))}else for(let t=0;t<l.gridWidth;t++){let i=1,s="",r=0,h="blueItem";for(let o=0;o<l.gridHeight;o++)this.tileGrid[t][o]instanceof g||this.tileGrid[t][o]instanceof a||(h=this.tileGrid[o][t].texture.key,h==s&&i++,h==s&&o!=l.gridHeight-1||(i>=3&&this.handleMatchStreak(r,o,t,i,e),r=o,i=1,s=h))}}specialTileAppearancePosition(e,t,i,s,l){if(void 0===this.firstSelectedTile)return"HORIZONTAL"===l?{row:i,col:e}:{row:e,col:i};{const t=this.getTilePos(this.tileGrid,this.firstSelectedTile),s=this.getTilePos(this.tileGrid,this.secondSelectedTile);if("HORIZONTAL"===l){if(t.y===i)return{row:i,col:t.x};if(s.y===i)return{row:i,col:s.x}}else{if(t.x===i)return{row:t.y,col:i};if(s.x===i)return{row:s.y,col:i}}return"HORIZONTAL"===l?{row:i,col:e}:{row:e,col:i}}}handleMatchStreak(e,t,i,s,r){var h;if(s>=4){const{row:o,col:n}=this.specialTileAppearancePosition(e,t,i,s,r),d=n*l.tileWidth+l.GRID_OFFSET_X,c=o*l.tileHeight+l.GRID_OFFSET_Y;null===(h=this.tileGrid[o][n])||void 0===h||h.destroy(),this.tileGrid[o][n]=void 0;let p=s-1;for(let t=0;t<s;t++)"HORIZONTAL"===r?e+t!==n&&this.tweens.add({targets:this.tileGrid[i][e+t],x:d,duration:l.swapSpeed,onComplete:()=>{var s;p--,null===(s=this.tileGrid[i][e+t])||void 0===s||s.destroy(),this.tileGrid[i][e+t]=void 0,0===p&&this.stateMachine.transition("fill")}}):e+t!==o&&this.tweens.add({targets:this.tileGrid[e+t][i],y:c,duration:l.swapSpeed,onComplete:()=>{var s;p--,null===(s=this.tileGrid[e+t][i])||void 0===s||s.destroy(),this.tileGrid[e+t][i]=void 0,0===p&&this.stateMachine.transition("fill")}});this.tileGrid[o][n]=4===s?new g(this,d,c,r):new a(this,d,c)}else for(let t=0;t<s;t++)"HORIZONTAL"===r?this.removeMap[i][e+t]++:this.removeMap[e+t][i]++}countVerticalMatches(e,t){let i=this.tileGrid[e][t];if(!i)return 0;let s=0,l=i.texture.key;const r=[1,2,-1,-2];for(const i of r)this.matchType(e+i,t,l)&&s++;return s}matchType(e,t,i){return!(e<0||e>=l.gridWidth||t<0||t>=l.gridHeight||!this.tileGrid[t][e]||this.tileGrid[t][e].texture.key!==i)}destroyTiles(){this.firstSelectedTile=void 0,this.secondSelectedTile=void 0;let e=!1;for(let t=0;t<l.gridHeight;t++)for(let i=0;i<l.gridWidth;i++)if(this.removeMap[t][i]>0){const s=this.tileGrid[t][i];s instanceof g&&(e=!0),this.scoreManager.addScore(100),null==s||s.destroyTile(),this.tileGrid[t][i]=void 0}e||this.stateMachine.transition("fill")}makeTilesFall(){return x(this,void 0,void 0,(function*(){console.log("makeTilesFall");for(let e=l.gridHeight-2;e>=0;e--)for(let t=0;t<l.gridWidth;t++)if(this.tileGrid[e][t]){let i=this.holesBelow(e,t);i>0&&(this.tweens.add({targets:this.tileGrid[e][t],y:this.tileGrid[e][t].y+i*l.tileHeight,duration:l.fallSpeed*i}),this.tileGrid[e+i][t]=this.tileGrid[e][t],this.tileGrid[e][t]=void 0)}}))}holesBelow(e,t){let i=0;for(let s=e+1;s<l.gridHeight;s++)void 0===this.tileGrid[s][t]&&i++;return i}holesInCol(e){var t=0;for(let i=0;i<l.gridHeight;i++)null==this.tileGrid[i][e]&&t++;return t}replenishField(){return x(this,void 0,void 0,(function*(){console.log("replenishField"),this.firstSelectedTile=void 0,this.secondSelectedTile=void 0;let e=0;for(let t=0;t<l.gridWidth;t++){let i=this.holesInCol(t);if(i>0)for(let s=0;s<i;s++){e++;let r=l.candyTypes[Phaser.Math.RND.between(0,l.candyTypes.length-1)];this.tileGrid[s][t]=new n(this,t,s,r),this.tileGrid[s][t].x=l.tileWidth*t+l.GRID_OFFSET_X,this.tileGrid[s][t].y=-(i-s)*l.tileHeight+l.GRID_OFFSET_Y,this.tileGrid[s][t].visible=!1,this.tweens.add({targets:this.tileGrid[s][t],y:l.tileHeight*s+l.GRID_OFFSET_Y,duration:l.fallSpeed*i,callbackScope:this,onUpdate:()=>{this.tileGrid[s][t].y>=l.GRID_OFFSET_Y&&(this.tileGrid[s][t].visible=!0)},onComplete:()=>{e--,0==e&&(this.matchInBoard()?this.time.addEvent({delay:300,callback:this.handleMatches,callbackScope:this}):this.canPick=!0)}})}}}))}}const M=G,O={type:Phaser.AUTO,width:window.innerWidth,height:window.innerHeight,scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,parent:"game",width:window.innerWidth,height:window.innerHeight},physics:{default:"arcade",arcade:{gravity:{x:0,y:250},debug:!0}},scene:[s,M]};new Phaser.Game(O)}},i={};function s(e){var l=i[e];if(void 0!==l)return l.exports;var r=i[e]={exports:{}};return t[e].call(r.exports,r,r.exports,s),r.exports}s.m=t,e=[],s.O=(t,i,l,r)=>{if(!i){var h=1/0;for(d=0;d<e.length;d++){for(var[i,l,r]=e[d],o=!0,n=0;n<i.length;n++)(!1&r||h>=r)&&Object.keys(s.O).every((e=>s.O[e](i[n])))?i.splice(n--,1):(o=!1,r<h&&(h=r));if(o){e.splice(d--,1);var a=l();void 0!==a&&(t=a)}}return t}r=r||0;for(var d=e.length;d>0&&e[d-1][2]>r;d--)e[d]=e[d-1];e[d]=[i,l,r]},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e={792:0};s.O.j=t=>0===e[t];var t=(t,i)=>{var l,r,[h,o,n]=i,a=0;if(h.some((t=>0!==e[t]))){for(l in o)s.o(o,l)&&(s.m[l]=o[l]);if(n)var d=n(s)}for(t&&t(i);a<h.length;a++)r=h[a],s.o(e,r)&&e[r]&&e[r][0](),e[r]=0;return s.O(d)},i=self.webpackChunktype_project_template=self.webpackChunktype_project_template||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var l=s.O(void 0,[96],(()=>s(485)));l=s.O(l)})();